name = "Attrition Rate"
) %>%
hc_title(text = "Attrition Rate by Business Travel Frequency") %>%
hc_xAxis(title = list(text = "Business Travel Frequency")) %>%
hc_yAxis(title = list(text = "Attrition Rate (%)")) %>%
hc_colors("steelblue")
#loading packages
suppressMessages(
suppressWarnings(
pacman::p_load(DBI,
RPostgres,
tidyverse,
dplyr,
highcharter)
)
)
# Set up connection
con <- dbConnect(
RPostgres::Postgres(),
dbname = "employee_experience",
host = "localhost",
port = 5432,
user = "postgres",
password = "password"
)
# Fetch data from SQL query
attrition_department <- dbGetQuery(con, "
SELECT ei.\"Department\", ROUND(AVG(\"Attrition\")*100,2) AS attrition_rate
FROM employee_exp AS ee
LEFT JOIN employee_info AS ei
ON ee.\"EmployeeNumber\" = ei.\"EmployeeNumber\"
GROUP BY \"Department\"
ORDER BY attrition_rate DESC;
")
# Create an interactive bar chart
hchart(
attrition_department,
"column",
hcaes(x = Department, y = attrition_rate),
name = "Attrition Rate"
) %>%
hc_title(text = "Attrition Rate by Department") %>%
hc_xAxis(title = list(text = "Department")) %>%
hc_yAxis(title = list(text = "Attrition Rate (%)")) %>%
hc_colors("steelblue")
# Fetch data from SQL query
attrition_role <- dbGetQuery(con, "
SELECT ei.\"JobRole\", ROUND(AVG(\"Attrition\")*100,2) AS attrition_rate
FROM employee_info AS ei
LEFT JOIN employee_exp AS ee
ON ei.\"EmployeeNumber\" = ee.\"EmployeeNumber\"
GROUP BY \"JobRole\"
ORDER BY attrition_rate DESC;
")
# Create an interactive bar chart
hchart(
attrition_role,
"column",
hcaes(x = JobRole, y = attrition_rate),
name = "Attrition Rate"
) %>%
hc_title(text = "Attrition Rate by Job Role") %>%
hc_xAxis(title = list(text = "Job Role")) %>%
hc_yAxis(title = list(text = "Attrition Rate (%)")) %>%
hc_colors("steelblue")
# Fetch data from SQL query
attrition_income <- dbGetQuery(con, "
WITH Quartiles AS (
SELECT PERCENTILE_CONT(0.25) WITHIN GROUP (ORDER BY \"MonthlyIncome\") AS Q1,
PERCENTILE_CONT(0.50) WITHIN GROUP (ORDER BY \"MonthlyIncome\") AS Q2,
PERCENTILE_CONT(0.75) WITHIN GROUP (ORDER BY \"MonthlyIncome\") AS Q3
FROM employee_exp
)
SELECT CASE
WHEN \"MonthlyIncome\" < Quartiles.Q1 THEN
CONCAT('Low Income (<', ROUND(Quartiles.Q1::numeric, 2), ')')
WHEN \"MonthlyIncome\" >= Quartiles.Q1 AND \"MonthlyIncome\" < Quartiles.Q2 THEN
CONCAT('Lower Mid Income (', ROUND(Quartiles.Q1::numeric, 2), '-', ROUND(Quartiles.Q2::numeric, 2), ')')
WHEN \"MonthlyIncome\" >= Quartiles.Q2 AND \"MonthlyIncome\" < Quartiles.Q3 THEN
CONCAT('Upper Mid Income (', ROUND(Quartiles.Q2::numeric, 2), '-', ROUND(Quartiles.Q3::numeric, 2), ')')
ELSE
CONCAT('High Income (>', ROUND(Quartiles.Q3::numeric, 2), ')')
END AS income_bracket,
ROUND(AVG(\"Attrition\")*100, 2) AS attrition_rate
FROM employee_exp, Quartiles
GROUP BY income_bracket
ORDER BY attrition_rate DESC;
")
# Create an interactive bar chart
hchart(
attrition_income,
"column",
hcaes(x = income_bracket, y = attrition_rate),
name = "Attrition Rate"
) %>%
hc_title(text = "Attrition Rate by Monthly Income Bracket") %>%
hc_xAxis(title = list(text = "Monthly Income")) %>%
hc_yAxis(title = list(text = "Attrition Rate (%)")) %>%
hc_colors("steelblue")
#loading packages
suppressMessages(
suppressWarnings(
pacman::p_load(DBI,
RPostgres,
tidyverse,
dplyr,
highcharter)
)
)
# Set up connection
con <- dbConnect(
RPostgres::Postgres(),
dbname = "employee_experience",
host = "localhost",
port = 5432,
user = "postgres",
password = "password"
)
# Fetch data from SQL query
attrition_department <- dbGetQuery(con, "
SELECT ei.\"Department\", ROUND(AVG(\"Attrition\")*100,2) AS attrition_rate
FROM employee_exp AS ee
LEFT JOIN employee_info AS ei
ON ee.\"EmployeeNumber\" = ei.\"EmployeeNumber\"
GROUP BY \"Department\"
ORDER BY attrition_rate DESC;
")
# Create an interactive bar chart
hchart(
attrition_department,
"column",
hcaes(x = Department, y = attrition_rate),
name = "Attrition Rate"
) %>%
hc_title(text = "Attrition Rate by Department") %>%
hc_xAxis(title = list(text = "Department")) %>%
hc_yAxis(title = list(text = "Attrition Rate (%)")) %>%
hc_colors("steelblue")
# Fetch data from SQL query
attrition_role <- dbGetQuery(con, "
SELECT ei.\"JobRole\", ROUND(AVG(\"Attrition\")*100,2) AS attrition_rate
FROM employee_info AS ei
LEFT JOIN employee_exp AS ee
ON ei.\"EmployeeNumber\" = ee.\"EmployeeNumber\"
GROUP BY \"JobRole\"
ORDER BY attrition_rate DESC;
")
# Create an interactive bar chart
hchart(
attrition_role,
"column",
hcaes(x = JobRole, y = attrition_rate),
name = "Attrition Rate"
) %>%
hc_title(text = "Attrition Rate by Job Role") %>%
hc_xAxis(title = list(text = "Job Role")) %>%
hc_yAxis(title = list(text = "Attrition Rate (%)")) %>%
hc_colors("steelblue")
# Fetch data from SQL query
attrition_income <- dbGetQuery(con, "
WITH Quartiles AS (
SELECT PERCENTILE_CONT(0.25) WITHIN GROUP (ORDER BY \"MonthlyIncome\") AS Q1,
PERCENTILE_CONT(0.50) WITHIN GROUP (ORDER BY \"MonthlyIncome\") AS Q2,
PERCENTILE_CONT(0.75) WITHIN GROUP (ORDER BY \"MonthlyIncome\") AS Q3
FROM employee_exp
)
SELECT CASE
WHEN \"MonthlyIncome\" < Quartiles.Q1 THEN
CONCAT('Low Income (<', ROUND(Quartiles.Q1::numeric, 2), ')')
WHEN \"MonthlyIncome\" >= Quartiles.Q1 AND \"MonthlyIncome\" < Quartiles.Q2 THEN
CONCAT('Lower Mid Income (', ROUND(Quartiles.Q1::numeric, 2), '-', ROUND(Quartiles.Q2::numeric, 2), ')')
WHEN \"MonthlyIncome\" >= Quartiles.Q2 AND \"MonthlyIncome\" < Quartiles.Q3 THEN
CONCAT('Upper Mid Income (', ROUND(Quartiles.Q2::numeric, 2), '-', ROUND(Quartiles.Q3::numeric, 2), ')')
ELSE
CONCAT('High Income (>', ROUND(Quartiles.Q3::numeric, 2), ')')
END AS income_bracket,
ROUND(AVG(\"Attrition\")*100, 2) AS attrition_rate
FROM employee_exp, Quartiles
GROUP BY income_bracket
ORDER BY attrition_rate DESC;
")
# Create an interactive bar chart
hchart(
attrition_income,
"column",
hcaes(x = income_bracket, y = attrition_rate),
name = "Attrition Rate"
) %>%
hc_title(text = "Attrition Rate by Monthly Income Bracket") %>%
hc_xAxis(title = list(text = "Monthly Income")) %>%
hc_yAxis(title = list(text = "Attrition Rate (%)")) %>%
hc_colors("steelblue")
# Fetch data from SQL query
attrition_promotion <- dbGetQuery(con, "
SELECT CASE
WHEN \"YearsSinceLastPromotion\" < 2 THEN 'Less than 2'
WHEN \"YearsSinceLastPromotion\" BETWEEN 2 AND 4 THEN 'Between 2 and 4'
WHEN \"YearsSinceLastPromotion\" BETWEEN 5 AND 7 THEN 'Between 5 and 7'
WHEN \"YearsSinceLastPromotion\" > 7 THEN 'More than 7'
END AS last_promotion,
ROUND(AVG(\"Attrition\") * 100,2) AS attrition_rate
FROM employee_info ei
JOIN employee_exp ee ON ei.\"EmployeeNumber\" = ee.\"EmployeeNumber\"
GROUP BY
CASE
WHEN \"YearsSinceLastPromotion\" < 2 THEN 'Less than 2'
WHEN \"YearsSinceLastPromotion\" BETWEEN 2 AND 4 THEN 'Between 2 and 4'
WHEN \"YearsSinceLastPromotion\" BETWEEN 5 AND 7 THEN 'Between 5 and 7'
WHEN \"YearsSinceLastPromotion\" > 7 THEN 'More than 7'
END
ORDER BY attrition_rate DESC;
")
# Create an interactive bar chart
hchart(
attrition_promotion,
"column",
hcaes(x = last_promotion, y = attrition_rate),
name = "Attrition Rate"
) %>%
hc_title(text = "Attrition Rate by Years Since Last Promotion") %>%
hc_xAxis(title = list(text = "Years Since Last Promotion")) %>%
hc_yAxis(title = list(text = "Attrition Rate (%)")) %>%
hc_colors("steelblue")
# Fetch data from SQL query
attrition_tenure <- dbGetQuery(con, "
SELECT CASE
WHEN \"YearsInCurrentRole\" < 2 THEN 'Less than 2'
WHEN \"YearsInCurrentRole\" BETWEEN 2 AND 4 THEN 'Between 2 and 4'
WHEN \"YearsInCurrentRole\" BETWEEN 5 AND 7 THEN 'Between 5 and 7'
WHEN \"YearsInCurrentRole\" > 7 THEN 'More than 7'
END AS years_in_current_role,
ROUND(AVG(\"Attrition\"),2) * 100 AS attrition_rate
FROM employee_info ei
JOIN employee_exp ee ON ei.\"EmployeeNumber\" = ee.\"EmployeeNumber\"
GROUP BY
CASE
WHEN \"YearsInCurrentRole\" < 2 THEN 'Less than 2'
WHEN \"YearsInCurrentRole\" BETWEEN 2 AND 4 THEN 'Between 2 and 4'
WHEN \"YearsInCurrentRole\" BETWEEN 5 AND 7 THEN 'Between 5 and 7'
WHEN \"YearsInCurrentRole\" > 7 THEN 'More than 7'
END
ORDER BY attrition_rate DESC;
")
# Create an interactive bar chart
hchart(
attrition_tenure,
"column",
hcaes(x = years_in_current_role, y = attrition_rate),
name = "Attrition Rate"
) %>%
hc_title(text = "Attrition Rate by Years in Current Role") %>%
hc_xAxis(title = list(text = "Years in Current Role")) %>%
hc_yAxis(title = list(text = "Attrition Rate (%)")) %>%
hc_colors("steelblue")
# Fetch data from SQL query
attrition_overtime <- dbGetQuery(con, "
SELECT \"OverTime\", ROUND(AVG(\"Attrition\")*100,2) AS attrition_rate
FROM employee_exp
GROUP BY \"OverTime\"
ORDER BY attrition_rate DESC;
")
# Create an interactive bar chart
hchart(
attrition_overtime,
"column",
hcaes(x = "OverTime", y = attrition_rate),
name = "Attrition Rate"
) %>%
hc_title(text = "Attrition Rate by Overtime Status") %>%
hc_xAxis(title = list(text = "Overtime Status")) %>%
hc_yAxis(title = list(text = "Attrition Rate (%)")) %>%
hc_colors("steelblue")
attrition_age <- dbGetQuery(con, "
SELECT CASE
WHEN \"Age\" < 30 THEN 'Under 30'
WHEN \"Age\" BETWEEN 30 AND 40 THEN '30-40'
WHEN \"Age\" BETWEEN 41 AND 50 THEN '41-50'
ELSE 'Over 50'
END AS age_group,
ROUND(AVG(\"Attrition\")*100,2) AS attrition_rate
FROM employee_info ei
JOIN employee_exp ee ON ei.\"EmployeeNumber\" = ee.\"EmployeeNumber\"
GROUP BY age_group
ORDER BY attrition_rate DESC;
")
# Create the Highcharter bar chart
hchart(
attrition_age,
type = "column",  # Bar chart type
hcaes(x = age_group, y = attrition_rate),  # Correct column names
name = "Attrition Rate"
) %>%
hc_title(text = "Attrition Rate by Age") %>%
hc_xAxis(title = list(text = "Age")) %>%
hc_yAxis(title = list(text = "Attrition Rate (%)")) %>%
hc_colors("steelblue")
attrition_gender <- dbGetQuery(con, "
SELECT \"Gender\", ROUND(AVG(\"Attrition\")*100,2) AS attrition_rate
FROM employee_info ei
JOIN employee_exp ee ON ei.\"EmployeeNumber\" = ee.\"EmployeeNumber\"
GROUP BY \"Gender\"
ORDER BY attrition_rate DESC;
")
# Create the Highcharter bar chart
hchart(
attrition_gender,
type = "column",  # Bar chart type
hcaes(x = "Gender", y = attrition_rate),  # Correct column names
name = "Attrition Rate"
) %>%
hc_title(text = "Attrition Rate by Gender") %>%
hc_xAxis(title = list(text = "Gender")) %>%
hc_yAxis(title = list(text = "Attrition Rate (%)")) %>%
hc_colors("steelblue")
attrition_distance <- dbGetQuery(con, "
SELECT CASE
WHEN \"DistanceFromHome\" < 5 THEN 'Under 5 km'
WHEN \"DistanceFromHome\" BETWEEN 5 AND 10 THEN '5-10 km'
ELSE 'Over 10 km'
END AS distance_bracket,
ROUND(AVG(\"Attrition\")*100,2) AS attrition_rate
FROM employee_info ei
JOIN employee_exp ee ON ei.\"EmployeeNumber\" = ee.\"EmployeeNumber\"
GROUP BY distance_bracket
ORDER BY attrition_rate DESC;
")
# Create the Highcharter bar chart
hchart(
attrition_distance,
type = "column",  # Bar chart type
hcaes(x = distance_bracket, y = attrition_rate),  # Correct column names
name = "Attrition Rate"
) %>%
hc_title(text = "Attrition Rate by Distance from Home") %>%
hc_xAxis(title = list(text = "Distance from Home")) %>%
hc_yAxis(title = list(text = "Attrition Rate (%)")) %>%
hc_colors("steelblue")
attrition_education <- dbGetQuery(con, "
SELECT
CASE
WHEN \"Education\" = 1 THEN 'Below College'
WHEN \"Education\" = 2 THEN 'College'
WHEN \"Education\" = 3 THEN 'Bachelor'
WHEN \"Education\" = 4 THEN 'Master'
WHEN \"Education\" = 5 THEN 'Doctor'
ELSE 'Unknown'
END AS education_level,
ROUND(AVG(\"Attrition\") * 100, 2) AS attrition_rate
FROM employee_info ei
JOIN employee_exp ee ON ei.\"EmployeeNumber\" = ee.\"EmployeeNumber\"
GROUP BY education_level
ORDER BY attrition_rate DESC;
")
# Create the Highcharter bar chart
hchart(
attrition_education,
type = "column",  # Bar chart type
hcaes(x = education_level, y = attrition_rate),  # Correct column names
name = "Attrition Rate"
) %>%
hc_title(text = "Attrition Rate by Education Level") %>%
hc_xAxis(title = list(text = "Education Level")) %>%
hc_yAxis(title = list(text = "Attrition Rate (%)")) %>%
hc_colors("steelblue")
# Fetch data from SQL query
attrition_wlb <- dbGetQuery(con, "
SELECT
CASE
WHEN \"WorkLifeBalance\" = 1 THEN 'Bad'
WHEN \"WorkLifeBalance\" = 2 THEN 'Good'
WHEN \"WorkLifeBalance\" = 3 THEN 'Better'
WHEN \"WorkLifeBalance\" = 4 THEN 'Best'
ELSE 'Unknown'
END AS work_life_balance,
ROUND(AVG(\"Attrition\")*100, 2) AS attrition_rate
FROM employee_exp
GROUP BY work_life_balance
ORDER BY attrition_rate;
")
# Create an interactive bar chart
hchart(
attrition_wlb,
"column",
hcaes(x = work_life_balance, y = attrition_rate),
name = "Attrition Rate"
) %>%
hc_title(text = "Attrition Rate by Work-Life Balance Rating") %>%
hc_xAxis(title = list(text = "Work-Life Balance Rating")) %>%
hc_yAxis(title = list(text = "Attrition Rate (%)")) %>%
hc_colors("steelblue")
# Fetch data from SQL query
attrition_job_sat <- dbGetQuery(con, "
SELECT
CASE
WHEN \"JobSatisfaction\" = 1 THEN 'Low'
WHEN \"JobSatisfaction\" = 2 THEN 'Medium'
WHEN \"JobSatisfaction\" = 3 THEN 'High'
WHEN \"JobSatisfaction\" = 4 THEN 'Very High'
ELSE 'Unknown'
END AS job_satisfaction,
ROUND(AVG(\"Attrition\")*100, 2) AS attrition_rate
FROM employee_exp
GROUP BY job_satisfaction
ORDER BY attrition_rate DESC;
")
# Create an interactive bar chart
hchart(
attrition_job_sat,
"column",
hcaes(x = job_satisfaction, y = attrition_rate),
name = "Attrition Rate"
) %>%
hc_title(text = "Attrition Rate by Job Satisfaction") %>%
hc_xAxis(title = list(text = "Job Satisfaction")) %>%
hc_yAxis(title = list(text = "Attrition Rate (%)")) %>%
hc_colors("steelblue")
# Fetch data from SQL query
attrition_rel_sat <- dbGetQuery(con, "
SELECT
CASE
WHEN \"RelationshipSatisfaction\" = 1 THEN 'Low'
WHEN \"RelationshipSatisfaction\" = 2 THEN 'Medium'
WHEN \"RelationshipSatisfaction\" = 3 THEN 'High'
WHEN \"RelationshipSatisfaction\" = 4 THEN 'Very High'
ELSE 'Unknown'
END AS relationship_satisfaction,
ROUND(AVG(\"Attrition\")*100, 2) AS attrition_rate
FROM employee_exp
GROUP BY relationship_satisfaction
ORDER BY attrition_rate DESC;
")
# Create an interactive bar chart
hchart(
attrition_rel_sat,
"column",
hcaes(x = relationship_satisfaction, y = attrition_rate),
name = "Attrition Rate"
) %>%
hc_title(text = "Attrition Rate by Relationship Satisfaction") %>%
hc_xAxis(title = list(text = "Relationship Satisfaction")) %>%
hc_yAxis(title = list(text = "Attrition Rate (%)")) %>%
hc_colors("steelblue")
# Fetch data from SQL query
attrition_job_inv<- dbGetQuery(con, "
SELECT
CASE
WHEN \"JobInvolvement\" = 1 THEN 'Low'
WHEN \"JobInvolvement\" = 2 THEN 'Medium'
WHEN \"JobInvolvement\" = 3 THEN 'High'
WHEN \"JobInvolvement\" = 4 THEN 'Very High'
ELSE 'Unknown'
END AS job_involvement,
ROUND(AVG(\"Attrition\")*100, 2) AS attrition_rate
FROM employee_exp
GROUP BY job_involvement
ORDER BY attrition_rate DESC;
")
# Create an interactive bar chart
hchart(
attrition_job_inv,
"column",
hcaes(x = job_involvement, y = attrition_rate),
name = "Attrition Rate"
) %>%
hc_title(text = "Attrition Rate by Job Involvement") %>%
hc_xAxis(title = list(text = "Job Involvement")) %>%
hc_yAxis(title = list(text = "Attrition Rate (%)")) %>%
hc_colors("steelblue")
# Fetch data from SQL query
attrition_travel <- dbGetQuery(con, "
SELECT \"BusinessTravel\", ROUND(AVG(\"Attrition\")*100, 2) AS attrition_rate
FROM employee_exp
GROUP BY \"BusinessTravel\"
ORDER BY attrition_rate DESC;
")
# Create an interactive bar chart
hchart(
attrition_travel,
"column",
hcaes(x = BusinessTravel, y = attrition_rate),
name = "Attrition Rate"
) %>%
hc_title(text = "Attrition Rate by Business Travel Frequency") %>%
hc_xAxis(title = list(text = "Business Travel Frequency")) %>%
hc_yAxis(title = list(text = "Attrition Rate (%)")) %>%
hc_colors("steelblue")
# Fetch data from SQL query
attrition_performance <- dbGetQuery(con, "
SELECT
CASE
WHEN \"PerformanceRating\" = 1 THEN 'Low'
WHEN \"PerformanceRating\" = 2 THEN 'Good'
WHEN \"PerformanceRating\" = 3 THEN 'Excellent'
WHEN \"PerformanceRating\" = 4 THEN 'Outstanding'
ELSE 'Unknown'
END AS performance_rating,
ROUND(AVG(\"Attrition\")*100, 2) AS attrition_rate
FROM employee_exp
GROUP BY performance_rating
ORDER BY attrition_rate DESC;
")
# Create an interactive bar chart
hchart(
attrition_performance,
"column",
hcaes(x = performance_rating, y = attrition_rate),
name = "Attrition Rate"
) %>%
hc_title(text = "Attrition Rate by Supervisor-Rated Performance") %>%
hc_xAxis(title = list(text = "Supervisor-Rated Performance")) %>%
hc_yAxis(title = list(text = "Attrition Rate (%)")) %>%
hc_colors("steelblue")
